<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.springframework.expression.spel.SpelCompilationCoverageTests" tests="78" skipped="0" failures="0" errors="0" timestamp="2020-08-26T03:58:56" hostname="PC-20191023THJJ" time="0.457">
  <properties/>
  <testcase name="operatorInstanceOf" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.017"/>
  <testcase name="opDivide_mixedNumberTypes" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.032"/>
  <testcase name="opEq_SPR14863" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.002"/>
  <testcase name="variableReference_userDefined" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.001"/>
  <testcase name="plusNeedingCheckcast_SPR12426" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.002"/>
  <testcase name="opMinus_mixedNumberTypes" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.022"/>
  <testcase name="methodReference_simpleInstanceMethodNoArgReturnPrimitive" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.001"/>
  <testcase name="variableReference_root" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.0"/>
  <testcase name="compilerWithGenerics_12040_2" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.002"/>
  <testcase name="compilerWithGenerics_12040_3" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.002"/>
  <testcase name="compiledExpressionShouldWorkWhenUsingCustomFunctionWithVarargs" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.002"/>
  <testcase name="variantGetter" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.002"/>
  <testcase name="propertyReferenceVisibility" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.001"/>
  <testcase name="ternaryOperator_SPR15192" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.003"/>
  <testcase name="booleanLiteral" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.0"/>
  <testcase name="opDivide" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.006"/>
  <testcase name="ternary" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.002"/>
  <testcase name="longLiteral" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.001"/>
  <testcase name="opMinus" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.009"/>
  <testcase name="compilationOfBasicNullSafeMethodReference" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.0"/>
  <testcase name="operatorInstanceOf_SPR14250" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.002"/>
  <testcase name="methodReferenceMissingCastAndRootObjectAccessing_SPR12326" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.002"/>
  <testcase name="opPlus" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.01"/>
  <testcase name="functionReferenceVisibility_SPR12359" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.0"/>
  <testcase name="nullsafeFieldPropertyDereferencing_SPR16489" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.002"/>
  <testcase name="errorHandling" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.001"/>
  <testcase name="compoundExpression" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.002"/>
  <testcase name="methodReference" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.003"/>
  <testcase name="methodReference_literalArguments_int" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.0"/>
  <testcase name="compilerWithGenerics_12040" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.005"/>
  <testcase name="repeatedCompilation" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.122"/>
  <testcase name="failsWhenSettingContextForExpression_SPR12326" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.001"/>
  <testcase name="functionReferenceVarargs" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.001"/>
  <testcase name="indexerMapAccessor_12045" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.002"/>
  <testcase name="opMultiply" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.006"/>
  <testcase name="opEq" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.016"/>
  <testcase name="opGe" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.004"/>
  <testcase name="opGt" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.003"/>
  <testcase name="opLe" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.003"/>
  <testcase name="opLt" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.003"/>
  <testcase name="opNe" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.012"/>
  <testcase name="opOr" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.001"/>
  <testcase name="functionReferenceVarargs_SPR12359" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.004"/>
  <testcase name="elvis" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.0"/>
  <testcase name="opAnd" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.001"/>
  <testcase name="operatorNot" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.0"/>
  <testcase name="mixingItUp_propertyAccessIndexerOpLtTernaryRootNull" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.001"/>
  <testcase name="ternaryWithBooleanReturn" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.001"/>
  <testcase name="stringLiteral" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.001"/>
  <testcase name="mixingItUp_indexerOpEqTernary" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.0"/>
  <testcase name="opModulus_12041" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.007"/>
  <testcase name="realLiteral" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.0"/>
  <testcase name="nullsafeMethodChaining_SPR16489" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.002"/>
  <testcase name="inlineList" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.004"/>
  <testcase name="opPlusString" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.002"/>
  <testcase name="methodReferenceVarargs" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.028"/>
  <testcase name="functionReference" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.001"/>
  <testcase name="constructorReference" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.002"/>
  <testcase name="propertyReference" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.001"/>
  <testcase name="opModulus_mixedNumberTypes" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.016"/>
  <testcase name="opNe_SPR14863" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.002"/>
  <testcase name="opPlus_mixedNumberTypes" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.017"/>
  <testcase name="methodReference_staticMethod" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.001"/>
  <testcase name="methodReferenceReflectiveMethodSelectionWithVarargs" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.001"/>
  <testcase name="functionReferenceNonCompilableArguments_SPR12359" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.0"/>
  <testcase name="opMultiply_mixedNumberTypes" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.016"/>
  <testcase name="intLiteral" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.001"/>
  <testcase name="elvisOperator_SPR15192" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.002"/>
  <testcase name="nullLiteral" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.0"/>
  <testcase name="indexer" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.007"/>
  <testcase name="methodReference_simpleInstanceMethodNoArg" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.0"/>
  <testcase name="nestedInlineLists" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.004"/>
  <testcase name="constructorReference_SPR12326" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.006"/>
  <testcase name="constructorReference_SPR13781" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.008"/>
  <testcase name="floatLiteral" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.001"/>
  <testcase name="typeReference" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.002"/>
  <testcase name="methodReference_simpleInstanceMethodOneArgReturnPrimitive1" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.0"/>
  <testcase name="methodReference_simpleInstanceMethodOneArgReturnPrimitive2" classname="org.springframework.expression.spel.SpelCompilationCoverageTests" time="0.001"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
